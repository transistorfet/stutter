#
# Config Name:		config.cfg
# Description:		Default Configuration File
#


#  define the module source directory, wildcard matches all dirs (what about CVS dir)
#modsource src/modules/*

include src/defaults.cfg

frontend curses

module base
module irc

# TODO this is a hack because namespace changes in an include remain after the include file
namespace null

enable normal

set .path		";irc;base"
set fe.statusbar	"\022statusbar\022 $base.time $irc.current_nick on $irc.current_channel"


# think about how variables are added to the system (not only what their default value is)
# perhaps you could have a declaration of a system variable complete with the type and it's default value
# (and it's namespace somehow) in the module config-defs type file and then in the user config file, it's
# default value can be overridden.  That way, too, if it's not declared, an error can be thrown so that the
# user knows they made a mistake in their part of the config

# TODO how will you do constants now?

# perhaps you could have a #define IF_CONFIG_BASE_EXEC(code) macro for each option such that if it's
# enabled, the macro will emit the given code otherwise it will emit nothing
# the only use of this is to clean up some of the simple code instead of having a million #ifdefs everywhere
# but this would also be a bit dangerous for code that is not just a single statement

